(function(){"use_strict";function t(t){t.when("/",{templateUrl:"wwwroot/js/spa/home/index.html",controller:"indexCtrl"}).when("/login",{templateUrl:"wwwroot/js/spa/account/login.html",controller:"loginCtrl"}).when("/register",{templateUrl:"wwwroot/js/spa/account/register.html",controller:"registerCtrl"}).when("/customers",{templateUrl:"wwwroot/js/spa/customers/customers.html",controller:"customersCtrl"}).when("/customers/register",{templateUrl:"wwwroot/js/spa/customers/register.html",controller:"customersRegCtrl",resolve:{isAuthenticated:n}}).when("/movies",{templateUrl:"wwwroot/js/spa/movies/movies.html",controller:"moviesCtrl"}).when("/movies/add",{templateUrl:"wwwroot/js/spa/movies/add.html",controller:"movieAddCtrl",resolve:{isAuthenticated:n}}).when("/movies/:id",{templateUrl:"wwwroot/js/spa/movies/details.html",controller:"movieDetailsCtrl",resolve:{isAuthenticated:n}}).when("/movies/edit/:id",{templateUrl:"wwwroot/js/spa/movies/edit.html",controller:"movieEditCtrl"}).when("/rental",{templateUrl:"wwwroot/js/spa/rental/rental.html",controller:"rentalCtrl"}).otherwise({redirectTo:"/"})}function i(n,t,i,r){n.repository=i.get("repository")||{};n.repository.loggedUser&&(r.defaults.headers.common.Authorization=n.repository.loggedUser.authdata);$(document).ready(function(){$(".fancybox").fancybox({openEffect:"none",closeEffect:"none"});$(".fancybox-media").fancybox({openEffect:"none",closeEffect:"none",helpers:{media:{}}});$("[data-toggle=offcanvas]").click(function(){$(".row-offcanvas").toggleClass("active")})})}function n(n,t,i){n.isUserLoggedIn()||(t.previousState=i.path(),i.path("/login"))}angular.module("homeCinema",["common.ui","common.core"]).config(t).run(i);t.$inject=["$routeProvider"];i.$inject=["$rootScope","$location","$cookieStore","$http"];n.$inject=["membershipService","$rootScope","$location"]})(),function(n){"use strict";function t(n,t,i){function r(){t.get("/api/movies/latest",null,u,e);t.get("/api/genres/",null,o,f)}function u(t){n.latestMovies=t.data;n.loadingMovies=!1}function f(n){i.displayError(n.data)}function e(n){i.displayError(n.data)}function o(t){var i=t.data;Morris.Bar({element:"genres-bar",data:i,xkey:"Name",ykeys:["NumberOfMovies"],labels:["Number Of Movies"],barRatio:.4,xLabelAngle:55,hideHover:"auto",resize:"true"});n.loadingGenres=!1}n.pageClass="page-home";n.loadingMovies=!0;n.loadingGenres=!0;n.isReadOnly=!0;n.latestMovies=[];n.loadData=r;r()}n.controller("indexCtrl",t);t.$inject=["$scope","apiService","notificationService"]}(angular.module("homeCinema")),function(n){"use strict";function t(n,t,i,r){function u(){n.userData.isUserLoggedIn=i.isUserLoggedIn();n.userData.isUserLoggedIn&&(n.username=r.repository.loggedUser.username)}function f(){i.removeCredentials();t.path("#/");n.userData.displayUserInfo()}n.userData={};n.userData.displayUserInfo=u;n.logout=f;n.userData.displayUserInfo()}n.controller("rootCtrl",t);t.$inject=["$scope","$location","membershipService","$rootScope"]}(angular.module("homeCinema")),function(n){"use strict";function t(n,t,i,r){function u(u,f,e,o){return n.get(u,f).then(function(n){e(n)},function(n){n.status=="401"?(i.displayError("Authentication required."),r.previousState=t.path(),t.path("/login")):o!=null&&o(n)})}function f(u,f,e,o){return n.post(u,f).then(function(n){e(n)},function(n){n.status=="401"?(i.displayError("Authentication required."),r.previousState=t.path(),t.path("/login")):o!=null&&o(n)})}return{get:u,post:f}}n.factory("apiService",t);t.$inject=["$http","$location","notificationService","$rootScope"]}(angular.module("common.core")),function(n){"use strict";function t(n,t,i,r,u){function f(t,i,f){for(var o,e=0;e<t.length;e++)o=t[e],function(t){n.upload[t]=r.upload({url:"api/movies/images/upload?movieId="+i,method:"POST",file:o}).progress(function(){}).success(function(n){u.displaySuccess(n.FileName+" uploaded successfully");f()}).error(function(n){u.displayError(n.Message)})}(e)}n.upload=[];return{uploadImage:f}}n.factory("fileUploadService",t);t.$inject=["$rootScope","$http","$timeout","$upload","notificationService"]}(angular.module("common.core")),function(n){"use strict";function t(n,t,i,r,u,f){function e(t,i){n.post("/api/account/authenticate",t,i,c)}function o(t,i){n.post("/api/account/register",t,i,l)}function s(n){var t=r.encode(n.username+":"+n.password);f.repository={loggedUser:{username:n.username,authdata:t}};i.defaults.headers.common.Authorization="Basic "+t;u.put("repository",f.repository)}function h(){f.repository={};u.remove("repository");i.defaults.headers.common.Authorization=""}function c(n){t.displayError(n.data)}function l(){t.displayError("Registration failed. Try again.")}function a(){return f.repository.loggedUser!=null}return{login:e,register:o,saveCredentials:s,removeCredentials:h,isUserLoggedIn:a}}n.factory("membershipService",t);t.$inject=["apiService","notificationService","$http","$base64","$cookieStore","$rootScope"]}(angular.module("common.core")),function(n){"use strict";function t(){function n(n){toastr.success(n)}function t(n){Array.isArray(n)?n.forEach(function(n){toastr.error(n)}):toastr.error(n)}function i(n){toastr.warning(n)}function r(n){toastr.info(n)}toastr.options={debug:!1,positionClass:"toast-top-right",onclick:null,fadeIn:300,fadeOut:1e3,timeOut:3e3,extendedTimeOut:1e3};return{displaySuccess:n,displayError:t,displayWarning:i,displayInfo:r}}n.factory("notificationService",t)}(angular.module("common.core"));